{
	"info": {
		"_postman_id": "190da95e-a270-490b-84e8-21f64c890a9a",
		"name": "Work2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20770911"
	},
	"item": [
		{
			"name": "first_request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Спарсить response body в json.\r",
							"var jsonD = pm.response.json();\r",
							"var check_name = jsonD.name;\r",
							"var check_age = + jsonD.age;\r",
							"var check_salary = jsonD.salary;\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"check_AGE_func\", function () {\r",
							"    pm.expect(check_age).to.eql(70);\r",
							"});\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"check_NAME_func\", function () {\r",
							"    pm.expect(check_name).to.eql('Mister');\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"check_SALARY_func\", function () {\r",
							"    pm.expect(check_salary).to.eql(35000);\r",
							"});\r",
							"\r",
							"//Спарсить request.\r",
							"var full_req = request.data\r",
							"\r",
							"var age_req = +full_req.age\r",
							"var name_req = full_req.name\r",
							"var salary_req = +full_req.salary\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"check_AGE_func2\", function () {\r",
							"    pm.expect(check_age).to.eql(age_req);\r",
							"});\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check_NAME_func2\", function () {\r",
							"    pm.expect(check_name).to.eql(name_req);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY_func2\", function () {\r",
							"    pm.expect(check_salary).to.eql(salary_req);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(jsonD.family)\r",
							"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"check_SALARY_func3\", function () {\r",
							"    pm.expect(jsonD.family.u_salary_1_5_year).to.eql(salary_req*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Mister",
							"type": "text"
						},
						{
							"key": "age",
							"value": "70",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "35000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"var jsonD = pm.response.json();\r",
							"var check_name = jsonD.name;\r",
							"var check_age = + jsonD.age;\r",
							"var check_salary = jsonD.salary;\r",
							"//Спарсить request.\r",
							"var full_req = pm.request.url.query.toObject();\r",
							"var age_req = +full_req.age\r",
							"var name_req = full_req.name\r",
							"var salary_req = +full_req.salary\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check_NAME_func2\", function () {\r",
							"    pm.expect(check_name).to.eql(name_req);\r",
							"});\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"check_AGE_func2\", function () {\r",
							"    pm.expect(check_age).to.eql(age_req);\r",
							"});\r",
							"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY_func2\", function () {\r",
							"    pm.expect(check_salary).to.eql(salary_req);\r",
							"});\r",
							"//Вывести в консоль параметр family из response.\r",
							"console.log(jsonD.family)\r",
							"//Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonD.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"//Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonD.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"//Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonD.family.pets.dog).to.have.property(\"name\", \"Luky\");\r",
							"});\r",
							"//Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonD.family.pets.dog).to.have.property(\"age\", 4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Billy&age=33&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Billy"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"var jsonD = pm.response.json();\r",
							"var check_name = jsonD.name;\r",
							"var check_age = + jsonD.age;\r",
							"var check_salary = jsonD.salary;\r",
							"//Спарсить request.\r",
							"var full_req = pm.request.url.query.toObject();\r",
							"var age_req = +full_req.age\r",
							"var name_req = full_req.name\r",
							"var salary_req = +full_req.salary\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"check_NAME_func\", function () {\r",
							"    pm.expect(check_name).to.eql(name_req);\r",
							"});\r",
							"//Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"check_AGE_func\", function () {\r",
							"    pm.expect(check_age).to.eql(age_req);\r",
							"});\r",
							"//Вывести в консоль параметр salary из request.\r",
							"console.log(full_req.salary)\r",
							"//Вывести в консоль параметр salary из response.\r",
							"console.log(jsonD.salary)\r",
							"//Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(jsonD.salary[0])\r",
							"//Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonD.salary[1])\r",
							"//Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonD.salary[2])\r",
							"//Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY_func\", function () {\r",
							"    pm.expect(jsonD.salary[0]).to.eql(salary_req);\r",
							"});\r",
							"//Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY1_func\", function () {\r",
							"    pm.expect(+jsonD.salary[1]).to.eql(salary_req*2);\r",
							"});\r",
							"//Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY2_func\", function () {\r",
							"    pm.expect(+jsonD.salary[2]).to.eql(salary_req*3);\r",
							"});\r",
							"//Передать в окружение переменную name\r",
							"//Передать в окружение переменную age\r",
							"//Передать в окружение переменную salary\r",
							"pm.environment.set(\"name\", jsonD.name);\r",
							"pm.environment.set(\"age\", jsonD.age);\r",
							"pm.environment.set(\"salary\", jsonD.salary);\r",
							"//Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"var cycle;\r",
							"for (cycle = 0; cycle < 3; cycle++) {\r",
							"    console.log(jsonD.salary[cycle])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Billy&age=33&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Billy"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"//Спарсить request.\r",
							"var full_req = request.data;\r",
							"var salary_req = +full_req.salary\r",
							"//Проверить, что json response имеет параметр start_qa_salary\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonData).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"//Проверить, что json response имеет параметр person\r",
							"pm.test(\"Property is there\", function() {\r",
							"  pm.expect(jsonData).to.have.property(\"person\");\r",
							"});\r",
							"//Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"check_startSALARY_func\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(salary_req);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY6m_func\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(salary_req*2);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY12m_func\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(salary_req*2.7);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"var salary18 = jsonData[\"qa_salary_after_1.5_year\"]\r",
							"pm.test(\"check_SALARY18m_func\", function () {\r",
							"    pm.expect(salary18).to.eql(salary_req*3.3);\r",
							"});\r",
							"//Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"var salary42 = jsonData[\"qa_salary_after_3.5_years\"]\r",
							"pm.test(\"check_SALARY42m_func\", function () {\r",
							"    pm.expect(salary42).to.eql(salary_req*3.8);\r",
							"});\r",
							"//Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"check_uname_func\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(salary_req);\r",
							"});\r",
							"//Проверить, что параметр u_age равен age из request (age забрать из request.)\r",
							"var age_req = full_req.age\r",
							"pm.test(\"check_uname_func\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+age_req);\r",
							"});\r",
							"//Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"check_SALARY60m_func\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(salary_req*4.2);\r",
							"});\r",
							"//***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"var cycle;\r",
							"var elements = Object.entries(jsonData.person);\r",
							"for (cycle = 0; cycle < elements.length; cycle++){\r",
							"    console.log(elements[cycle])\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}